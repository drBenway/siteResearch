<?php

namespace Crawler;


/**
 * Generated by PHPUnit_SkeletonGenerator on 2013-01-23 at 18:04:35.
 */
class CrawlerSettingsTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var CrawlerSettings
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $url = "http://www.westworld.be";
        $type = "domain";
        $tweaksmock = $this->getMockBuilder('TweakRunner')
                ->disableOriginalConstructor()
                ->getMock();
        $filtersmock = $this->getMockBuilder('FilterRunner')
                ->disableOriginalConstructor()
                ->getMock();
        
       
            
        
        $this->object = new Classes\CrawlerSettings($url,$type,$tweaksmock,$filtersmock,false,true,true);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers Crawler\Classes\CrawlerSettings::setUrl
     * 
     */
    public function testSetUrl()
    {
        $url = "www.mytesturl.com";
        $this->object->setUrl($url);
        $this->AssertEquals($url,$this->object->getUrl(),"set url");
    }

    /**
     * @covers Crawler\Classes\CrawlerSettings::setType
     * 
     */
    public function testSetType()
    {
        $type = "domain";
        $this->object->setType($type);
        $this->AssertEquals($type,$this->object->getType(),"set type");
    }

    /**
     * @covers Crawler\Classes\CrawlerSettings::setStripIndex
     * 
     */
    public function testSetStripIndex()
    {
        $strip = true;
        $this->object->setStripIndex($strip);
        $this->AssertEquals($strip,$this->object->getStripIndex(),"set stripindex");
    }

    /**
     * @covers Crawler\Classes\CrawlerSettings::setStripParameters
     * 
     */
    public function testSetStripParameters()
    {
        $stripparam = true;
        $this->object->setStripParameters($stripparam);
        $this->AssertEquals($stripparam,$this->object->getStripParameters(),"set stripparam");
    }

    /**
     * @covers Crawler\Classes\CrawlerSettings::setDb
     * 
     */
    public function testSetDb()
    {
       $dbmock = $this->getMockBuilder('TweakRunner')
                ->disableOriginalConstructor()
                ->getMock();
        $this->AssertEquals($dbmock,$this->object->getDB(),"set DB");
    }

    /**
     * @covers Crawler\Classes\CrawlerSettings::setFilters
     * 
     */
    public function testSetFilters()
    {

        $filters = new Filters\FilterRunner();
        $this->object->setFilters($filters);
        $this->AssertEquals($filters,$this->object->getFilters(),"set filters");
    }

    /**
     * @covers Crawler\Classes\CrawlerSettings::setTweaks
     * 
     */
    public function testSetTweaks()
    {
        $tweaks = new Tweaks\TweakRunner();
        $this->object->setTweaks($tweaks);
        $this->AssertEquals($tweaks,$this->object->getTweaks(),"set tweaks");
    }

    /**
     * @covers Crawler\Classes\CrawlerSettings::setCurl
     * 
     */
    public function testSetCurl()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Crawler\Classes\CrawlerSettings::getUrl
     * 
     */
    public function testGetUrl()
    {
        $url = "www.mytesturl.com";
        $this->object->setUrl($url);
        $this->AssertEquals($url,$this->object->getUrl(),"get Url");
    }

    /**
     * @covers Crawler\Classes\CrawlerSettings::getType
     * 
     */
    public function testGetType()
    {
        $type = "domain";
        $this->object->setType($type);
        $this->AssertEquals($type,$this->object->getType(),"get type");
    }

    /**
     * @covers Crawler\Classes\CrawlerSettings::getStripIndex
     * 
     */
    public function testGetStripIndex()
    {
        $strip = true;
        $this->object->setStripIndex($strip);
        $this->AssertEquals($strip,$this->object->getStripIndex(),"get stripindex");
    }

    /**
     * @covers Crawler\Classes\CrawlerSettings::getStripParameters
     * 
     */
    public function testGetStripParameters()
    {
        $stripparam = true;
        $this->object->setStripParameters($stripparam);
        $this->AssertEquals($stripparam,$this->object->getStripParameters(),"get stripparam");
    }

    /**
     * @covers Crawler\Classes\CrawlerSettings::getDb
     * 
     */
    public function testGetDb()
    {

        $db = new DB\DoctrineDB();
        $this->object->setDb($db);
        $this->AssertEquals($db,$this->object->getDB(),"get db");
    }

    /**
     * @covers Crawler\Classes\CrawlerSettings::getFilters
     * 
     */
    public function testGetFilters()
    {
         $filter = new Filters\FilterExternalUrls();
        $this->object->setFilters($filter);
        $this->AssertEquals($filter,$this->object->getFilters(),"get filters");
    }

    /**
     * @covers Crawler\Classes\CrawlerSettings::getTweaks
     * 
     */
    public function testGetTweaks()
    {
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
        
    }

    /**
     * @covers Crawler\Classes\CrawlerSettings::getCurl
     * 
     */
    public function testGetCurl()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Crawler\Classes\CrawlerSettings::setStore
     * 
     */
    public function testSetStore()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Crawler\Classes\CrawlerSettings::getStore
     * 
     */
    public function testGetStore()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

}
